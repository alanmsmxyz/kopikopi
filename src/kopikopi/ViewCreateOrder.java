/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kopikopi;

import java.awt.event.*;
import javax.swing.*;
import javax.swing.table.*;


/**
 *
 * @author alanmsmxyz
 */
public class ViewCreateOrder extends javax.swing.JFrame {
    DefaultTableCellRenderer alignCenter = new DefaultTableCellRenderer();
    DefaultTableCellRenderer alignRight = new DefaultTableCellRenderer();
    DefaultTableCellRenderer alignLeft = new DefaultTableCellRenderer();
    
    DefaultTableModel tableItemsModel;

    /**
     * Creates new form CustomerView
     */
    public ViewCreateOrder() {
        initComponents();

        // Initiate custom renderer for table cell alignments
        alignCenter.setHorizontalAlignment(JLabel.CENTER);
        alignRight.setHorizontalAlignment(JLabel.RIGHT);
        alignLeft.setHorizontalAlignment(JLabel.LEFT);

        // tableItems's cells text alignment
        tableItems.getTableHeader().setDefaultRenderer(alignCenter);
        tableItems.getColumnModel().getColumn(1).setCellRenderer(alignLeft);
        tableItems.getColumnModel().getColumn(1).setCellRenderer(alignCenter);
        tableItems.getColumnModel().getColumn(2).setCellRenderer(alignRight);
        tableItems.getColumnModel().getColumn(3).setCellRenderer(alignRight);

        // cast tableItems table model as DefaultTableModel
        tableItemsModel = (DefaultTableModel) tableItems.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCustomer = new javax.swing.JPanel();
        labelSelectMenu = new javax.swing.JLabel();
        selectMenu = new javax.swing.JComboBox<>();
        labelInputMenuQty = new javax.swing.JLabel();
        inputMenuQty = new javax.swing.JTextField();
        btnAddItem = new javax.swing.JButton();
        containerTableItems = new javax.swing.JScrollPane();
        tableItems = new javax.swing.JTable();
        labelTotalPrice = new javax.swing.JLabel();
        inputTotalPrice = new javax.swing.JTextField();
        btnConfirmOrder = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelSelectMenu.setText("Pilih Menu");

        labelInputMenuQty.setText("Jumlah");

        inputMenuQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputMenuQtyActionPerformed(evt);
            }
        });

        btnAddItem.setText("Tambah ke Order");

        tableItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Menu", "Jumlah", "Hagra", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableItems.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tableItems.setShowGrid(true);
        tableItems.getTableHeader().setReorderingAllowed(false);
        containerTableItems.setViewportView(tableItems);
        if (tableItems.getColumnModel().getColumnCount() > 0) {
            tableItems.getColumnModel().getColumn(0).setResizable(false);
            tableItems.getColumnModel().getColumn(0).setPreferredWidth(150);
            tableItems.getColumnModel().getColumn(1).setResizable(false);
            tableItems.getColumnModel().getColumn(1).setPreferredWidth(50);
            tableItems.getColumnModel().getColumn(2).setResizable(false);
            tableItems.getColumnModel().getColumn(2).setPreferredWidth(100);
            tableItems.getColumnModel().getColumn(3).setResizable(false);
            tableItems.getColumnModel().getColumn(3).setPreferredWidth(100);
        }

        labelTotalPrice.setText("Total");

        inputTotalPrice.setEditable(false);
        inputTotalPrice.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        inputTotalPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTotalPriceActionPerformed(evt);
            }
        });

        btnConfirmOrder.setText("Konfirmasi Order");
        btnConfirmOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmOrderActionPerformed(evt);
            }
        });

        jLabel1.setText("*klik menu pada tabel untuk menghapusnya dari order");

        javax.swing.GroupLayout panelCustomerLayout = new javax.swing.GroupLayout(panelCustomer);
        panelCustomer.setLayout(panelCustomerLayout);
        panelCustomerLayout.setHorizontalGroup(
            panelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConfirmOrder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelCustomerLayout.createSequentialGroup()
                        .addGroup(panelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(containerTableItems, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(panelCustomerLayout.createSequentialGroup()
                                .addGroup(panelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelCustomerLayout.createSequentialGroup()
                                        .addComponent(selectMenu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(panelCustomerLayout.createSequentialGroup()
                                        .addComponent(labelSelectMenu)
                                        .addGap(200, 200, 200)))
                                .addGroup(panelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelInputMenuQty)
                                    .addGroup(panelCustomerLayout.createSequentialGroup()
                                        .addComponent(inputMenuQty, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnAddItem)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelCustomerLayout.createSequentialGroup()
                        .addComponent(labelTotalPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelCustomerLayout.setVerticalGroup(
            panelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCustomerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelSelectMenu)
                    .addComponent(labelInputMenuQty))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputMenuQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(containerTableItems, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCustomerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTotalPrice)
                    .addComponent(inputTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConfirmOrder)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelCustomer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmOrderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnConfirmOrderActionPerformed

    private void inputTotalPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTotalPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTotalPriceActionPerformed

    private void inputMenuQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputMenuQtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputMenuQtyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCreateOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCreateOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCreateOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCreateOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCreateOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddItem;
    private javax.swing.JButton btnConfirmOrder;
    private javax.swing.JScrollPane containerTableItems;
    private javax.swing.JTextField inputMenuQty;
    private javax.swing.JTextField inputTotalPrice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelInputMenuQty;
    private javax.swing.JLabel labelSelectMenu;
    private javax.swing.JLabel labelTotalPrice;
    private javax.swing.JPanel panelCustomer;
    private javax.swing.JComboBox<String> selectMenu;
    private javax.swing.JTable tableItems;
    // End of variables declaration//GEN-END:variables
    
    // Show popup mesage
    public void showPopup(String message, String title, int type){
        JOptionPane.showMessageDialog(null, message, title, type);
    }
    
    // Item input
    public int getSelectedMenu() {
        return selectMenu.getSelectedIndex();
    }
    
    public int getSelectedMenuQty() {
        try {
            return Integer.parseInt(inputMenuQty.getText());
        } catch (NumberFormatException e) {
            return 0;
        }
    }
    
    public void setMenuSelection(String[] s) {
        selectMenu.setModel(new javax.swing.DefaultComboBoxModel<>(s));
    }

        
    public void updateItemInput(int index, int qty) {
        selectMenu.setSelectedIndex(index);
        inputMenuQty.setText(String.valueOf(qty));
    }
    
    public void resetItemInput() {
        selectMenu.setSelectedIndex(-1);
        inputMenuQty.setText("");
    }
    
    // Items table
    public int getSelectedItem() {
        return tableItems.getSelectedRow();
    }
    
    public void resetItemsTable() {
        tableItemsModel.getDataVector().clear();
        tableItemsModel.fireTableDataChanged();
    }

    public void updateItemsTable(Object[][] rows) {
        tableItemsModel.getDataVector().clear();
        for(Object[] row : rows) tableItemsModel.addRow(row);
        tableItemsModel.fireTableDataChanged();
    }
    
    // TotalPrice
    public void resetTotalPrice() {
        inputTotalPrice.setText("");
    }
    
    public void updateTotalPrice(String total) {
        inputTotalPrice.setText(total);
    }
     
    // Method to identify action source in handler class
    public JButton getBtnAddItem() {
        return btnAddItem;
    }

    public JTable getTableItems() {
        return tableItems;
    }
    
    public JButton getBtnConfirmOrder() {
        return btnConfirmOrder;
    }
    
    // Binding ActionListener & MouseListener
    public void addActionListener(ActionListener e) {
        btnAddItem.addActionListener(e);
        btnConfirmOrder.addActionListener(e);
    }

    public void addMouseAdapter(MouseListener e) {
        tableItems.addMouseListener(e);
    }
}
